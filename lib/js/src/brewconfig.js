// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List        = require("bs-platform/lib/js/list.js");
var $$Array     = require("bs-platform/lib/js/array.js");
var Block       = require("bs-platform/lib/js/block.js");
var Utils       = require("./utils.js");
var Result      = require("./result.js");
var Pervasives  = require("bs-platform/lib/js/pervasives.js");
var Json_decode = require("bs-json/lib/js/src/Json_decode.js");

function make(brew, cask) {
  return /* record */[
          /* cask */List.map((function (p) {
                  return /* record */[/* name */p];
                }), cask),
          /* brew */List.map((function (p) {
                  return /* record */[/* name */p];
                }), brew)
        ];
}

function add(brewConfig, isCask, formula) {
  var $$package = /* record */[/* name */formula];
  return /* record */[
          /* cask */isCask ? Pervasives.$at(brewConfig[/* cask */0], /* :: */[
                  $$package,
                  /* [] */0
                ]) : brewConfig[/* cask */0],
          /* brew */isCask ? brewConfig[/* brew */1] : Pervasives.$at(brewConfig[/* brew */1], /* :: */[
                  $$package,
                  /* [] */0
                ])
        ];
}

function toDict(brewConfig) {
  var dict = { };
  var packages = function (packages$1) {
    return $$Array.of_list(List.map((function (param) {
                      return param[/* name */0];
                    }), packages$1));
  };
  dict["cask"] = packages(brewConfig[/* cask */0]);
  dict["brew"] = packages(brewConfig[/* brew */1]);
  return dict;
}

function toJson(brewConfig) {
  return Utils.jsonStringfy(toDict(brewConfig));
}

function fromJson(brewConfig) {
  var json;
  try {
    json = /* Ok */Block.__(0, [JSON.parse(brewConfig)]);
  }
  catch (exn){
    json = /* Error */Block.__(1, ["Error parsing JSON string"]);
  }
  var $$package = function (json) {
    return /* record */[/* name */Json_decode.string(json)];
  };
  var categories = function (json) {
    return /* record */[
            /* cask */Json_decode.field("cask", (function (param) {
                    return Json_decode.list($$package, param);
                  }), json),
            /* brew */Json_decode.field("brew", (function (param) {
                    return Json_decode.list($$package, param);
                  }), json)
          ];
  };
  return Result.$less$$great(json, categories);
}

exports.make     = make;
exports.add      = add;
exports.toDict   = toDict;
exports.toJson   = toJson;
exports.fromJson = fromJson;
/* Utils Not a pure module */
